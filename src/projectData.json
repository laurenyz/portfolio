[
        {
            "id": 1,
            "name": "mathLab",
            "demo_url": "https://youtu.be/86oJGqlPe60",
            "github": {
                "frontend": "https://github.com/laurenyz/mathLab-frontend",
                "backend": "https://github.com/laurenyz/mathLab-backend"
            },
            "languages": ["Ruby, JavaScript"],
            "backend": "Ruby on Rails",
            "frontend": "React",
            "libraries": ["Redux", "Thunk", "Action Cable", "Active Storage", "Material-UI", "React-to-Print", "bcrypt", "JWT token"],
            "description": "A resource for math students and teachers, mathLab has two main features: a math forum, and a live-editing document. Without logging in, users can view posts and replies, as well as create and share “scratchpads” (live-editing documents). Once logged in, users can create posts, create replies, and can upvote replies. Users can also save scratchpads, which they can access in their account along with their published posts. Users can collaborate with others on scratchpad documents by sharing the document's URL. Finally, users can update profile pictures and other account data, which update on the frontend right away and persist in the backend (stored in Cloudinary)."
            
        },
        {
            "id": 2,
            "name": "portfolio",
            "demo_url": "https://youtu.be/86oJGqlPe60",
            "github": "https://github.com/laurenyz/portfolio",
            "languages": ["JavaScript"],
            "backend": "",
            "frontend": "React",
            "libraries": ["Material-UI"],
            "description": "My portfolio"
        },
        {
            "id": 3,
            "name": "Stargazers",
            "demo_url": "https://youtu.be/hsCBoPEgrEU",
            "github": {
                "frontend": "https://github.com/matteoaricci/stargazers-frontend",
                "backend": "https://github.com/matteoaricci/stargazers-backend"
            },
            "languages": ["Ruby, JavaScript"],
            "backend": "Ruby on Rails",
            "frontend": "React",
            "libraries": ["Bootstrap", "bcrypt", "JWT token"],
            "description": "A collaborative project that was built to explore the functionality of React, Stargazers is a site meant to connect users based on their love of planets, constellations, and astrological signs. Users can favorite specific constellations and planets, and they can search for other users with common interests."
        },
        {
            "id": 4,
            "name": "BounceAround",
            "demo_url": "https://youtu.be/86oJGqlPe60",
            "github": {
                "frontend": "https://github.com/matteoaricci/bouncearound/tree/master/bounce-frontend",
                "backend": "https://github.com/matteoaricci/bouncearound/tree/master/bounce-backend"
            },
            "languages": ["Ruby, JavaScript"],
            "backend": "Ruby on Rails",
            "frontend": "JavaScript",
            "libraries": ["P5", "bcrypt"],
            "description": "A collaborative project that was built to explore the fundamentals of vanilla JavaScript and DOM manipulation. This is a basic game where users must draw barriers to get a ball from its initial start point to the end goal"
        },
        {
            "id": 5,
            "name": "Fetch",
            "demo_url": "https://youtu.be/86oJGqlPe60",
            "github": "https://github.com/laurenyz/fetch",
            "languages": ["Ruby"],
            "backend": "Ruby on Rails",
            "frontend": "Ruby on Rails",
            "libraries": ["bcrypt"],
            "description": "A project meant to explore Ruby on Rails, Fetch is a pet sitting web application with login features for pet owners and pet sitters (aka PetXperts). Pet owners can view available services and profiles for local PetXperts; when they find one they like, they can book an appointment linked to a specific pet's profile. PetXperts can see upcoming appointments, and can edit services offered."
            
        },
        {
            "id": 6,
            "name": "Zombo",
            "demo_url": "https://youtu.be/86oJGqlPe60",
            "github": "https://github.com/IdleScV/ZOMBO",
            "languages": ["Ruby"],
            "backend": "",
            "frontend": "",
            "libraries": ["Faker"],
            "description": "Zombo is not your average Zombie CLI game.  It features five mini-games that, when won, kill a zombie.  Mini-games ('weapons'), include: Sword (guess the number), knife (speed entry), candlestick (trivia), rope (hangman) and gun (speed typing)."
            
        }
    ]
